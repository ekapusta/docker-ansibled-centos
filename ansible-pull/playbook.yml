---

- hosts: 127.0.0.1
  connection: local

  vars:
    schedule: '*/15 * * * *'
    cron_user: root
    logfile: /var/log/ansible-pull.log
    galaxy_logfile: /var/log/ansible-galaxy.log
    workdir: /var/lib/ansible/local
    repo_url: "{{ lookup('env','ANSIBLE_PLAYBOOK_REPO') }}"
    filename: "{{ lookup('env','ANSIBLE_PLAYBOOK') }}"
    ansible_pull_cmd: "ansible-pull --accept-host-key --vault-password-file=/var/lib/ansible/local/.vault_pass.txt --connection=local -d {{ workdir }} -U {{ repo_url }} {{ filename }} -i localhost -o"
    galaxy_install_cmd: "ansible-galaxy install -r {{ workdir }}/requirements.yml --force"
  tasks:

    - name: Install ansible and crontab
      yum: name={{item}} state=present
      with_items:
        - git
        - crontabs

    - name: start crond on boot
      service: name=crond state=started enabled=yes
      tags: crontab

    - name: Create local directory to work from
      file: path={{workdir}} state=directory owner=root group=root mode=0751

    - name: Create crontab entry to clone/pull git repository
      template: src=templates/etc_cron.d_ansible-pull.j2 dest=/etc/cron.d/ansible-pull owner=root group=root mode=0644
      when: (repo_url | trim != '')

    - name: Create logrotate entry for ansible-pull.log
      template: src=templates/etc_logrotate.d_ansible-pull.j2 dest=/etc/logrotate.d/ansible-pull owner=root group=root mode=0644
      when: (repo_url | trim != '')

    - block:
        - name: Run galaxy
          shell: "{{ galaxy_install_cmd }} >> {{ galaxy_logfile }}"
          ignore_errors: yes
        - name: Run ansible
          shell: "{{ ansible_pull_cmd }} >> {{ logfile }}"
      rescue:
        - name: Run galaxy
          shell: "{{ galaxy_install_cmd }} >> {{ galaxy_logfile }}"
        - name: Run ansible
          shell: "{{ ansible_pull_cmd }} >> {{ logfile }}"
      when: (repo_url | trim != '')
