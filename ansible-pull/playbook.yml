---

- hosts: 127.0.0.1
  connection: local

  vars:
    logfile: /var/log/ansible-pull.log
    galaxy_logfile: /var/log/ansible-galaxy.log
    workdir: /var/lib/ansible/local
    repo_url: "{{ lookup('env','ANSIBLE_PLAYBOOK_REPO') }}"
    filename: "{{ lookup('env','ANSIBLE_PLAYBOOK') }}"
    extra_options: "{{ lookup('env','ANSIBLE_EXTRA_OPTIONS') }}"
    ansible_pull_cmd: "ansible-pull --accept-host-key --vault-password-file=/var/lib/ansible/local/.vault_pass.txt --connection=local -d {{ workdir }} -U {{ repo_url }} {{ filename }} -i localhost {{ extra_options }}"
    galaxy_install_cmd: "ansible-galaxy install -r {{ workdir }}/requirements.yml --force"
  tasks:

    - name: Install ansible and crontab
      yum: name={{item}} state=present
      with_items:
        - git
        - crontabs

    - name: start crond on boot
      service: name=crond state=started enabled=yes
      tags: crontab

    - name: Create local directory to work from
      file: path={{workdir}} state=directory owner=root group=root mode=0751

    - name: Crontab entry to clone/pull ansible git repository
      cron:
        name: "ansible-pull"
        state: present
        disabled: "{{ repo_url | ternary('no', 'yes') }}"
        minute: "*/15"
        job: "sleep $(( 1$(date +%N) % 200 )) && {{ ansible_pull_cmd }} >> {{ logfile }} 2>&1"

    - name: Crontab entry to update packages from ansible-galaxy
      cron:
        name: "ansible-galaxy"
        state: present
        disabled: "{{ repo_url | ternary('no', 'yes') }}"
        minute: "0"
        hour: "*/6"
        job: "{{ galaxy_install_cmd }} >> {{ galaxy_logfile }} 2>&1"

    - block:
        - name: Run ansible
          shell: "{{ ansible_pull_cmd }} >> {{ logfile }}"
      rescue:
        - name: Run galaxy
          shell: "{{ galaxy_install_cmd }} >> {{ galaxy_logfile }}"
        - name: Run ansible
          shell: "{{ ansible_pull_cmd }} >> {{ logfile }}"
      when: (repo_url | trim != '')
